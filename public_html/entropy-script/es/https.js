import{N_any,N_functionCall}from"./nodes.js";import{Position}from"./position.js";import{global}from"./constants.js";import{Context}from"./context.js";function addHTTPS(e,t){global.set("nodeHTTPS",e),global.set("nodeHTTP",t),global.set("https",{createServer:(o,n)=>{const r=(e,t)=>{const r=e.url||"/";if(o.debug&&console.log(`Got request at ${r}`),n.hasOwnProperty(r)){let l="";e.on("data",(e=>{l+=e})),e.on("end",(()=>{t.writeHead(200);let s={};try{s=JSON.parse(null!=l?l:"{}")}catch(t){return void console.log(`Error parsing JSON data from URL ${e.url} with JSON ${l}: ${t}`)}const a=new N_functionCall(Position.unknown,n[r],[]),i=new Context;i.parent=global,i.set("body",new N_any(s));const c=a.interpret(i);if(c.error)return void console.log(c.error.str);c.val||(c.val={});let u="";try{-1!==["string","number"].indexOf(typeof c.val)&&(c.val={value:c.val}),u=JSON.stringify(c.val)}catch(e){return console.log(`Incorrect return value for handler of ${r}. Must be JSONifyable.`),void(o.debug&&console.log(`Detail: Expected type (object|undefined) but got value ${c.val} of type ${c.type}`))}o.debug&&console.log(`Response: ${u}`),t.end(u)}))}else t.writeHead(404),t.end("{}")};if((o=Object.assign({port:3e3,secure:!1,debug:!1},o)).secure){const t=e.createServer({key:o.key,cert:o.cert},r);o.hostname?t.listen(o.port,o.hostname,(()=>{console.log(`Server running at https://${o.hostname}:${o.port}`)})):t.listen(o.port,(()=>{console.log(`Server running at https://${o.hostname}:${o.port}`)}))}else t.createServer(r).listen(o.port,o.hostname,(()=>{console.log(`Server running at http://${o.hostname}:${o.port}`)}))}})}export default addHTTPS;